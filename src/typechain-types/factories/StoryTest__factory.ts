/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { StoryTest, StoryTestInterface } from "../StoryTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorContribCounts",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "bookmark",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bookmarks",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cid",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "cid",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "prevCID",
        type: "bytes",
      },
    ],
    name: "contribute",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorAddr",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "cid",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "prevCID",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "nextCIDs",
            type: "bytes[]",
          },
          {
            internalType: "uint8",
            name: "contribCount",
            type: "uint8",
          },
          {
            internalType: "enum Story.StorylineState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
        ],
        internalType: "struct Story.Contribution",
        name: "contribution",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "address",
        name: "authorAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "cid",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "prevCID",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "contribCount",
        type: "uint8",
      },
      {
        internalType: "enum Story.StorylineState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "draftVotes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "getContribution",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorAddr",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "cid",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "prevCID",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "nextCIDs",
            type: "bytes[]",
          },
          {
            internalType: "uint8",
            name: "contribCount",
            type: "uint8",
          },
          {
            internalType: "enum Story.StorylineState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
        ],
        internalType: "struct Story.Contribution",
        name: "contribution",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSavedCID",
    outputs: [
      {
        internalType: "bytes",
        name: "bookmarkedCID",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "getStoryline",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorAddr",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "cid",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "prevCID",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "nextCIDs",
            type: "bytes[]",
          },
          {
            internalType: "uint8",
            name: "contribCount",
            type: "uint8",
          },
          {
            internalType: "enum Story.StorylineState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
        ],
        internalType: "struct Story.Contribution[]",
        name: "storyline",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "authors",
        type: "address[]",
      },
    ],
    name: "getStorylineLeader",
    outputs: [
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "getStorylineTest",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "authorAddr",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "cid",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "prevCID",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "nextCIDs",
            type: "bytes[]",
          },
          {
            internalType: "uint8",
            name: "contribCount",
            type: "uint8",
          },
          {
            internalType: "enum Story.StorylineState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
        ],
        internalType: "struct Story.Contribution[]",
        name: "storyline",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialContribution",
    outputs: [
      {
        internalType: "address",
        name: "authorAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "cid",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "prevCID",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "contribCount",
        type: "uint8",
      },
      {
        internalType: "enum Story.StorylineState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_prevCID",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_finalDraftCID",
        type: "bytes",
      },
    ],
    name: "publishDraft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "publishVotes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uniqueAuthors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniqueVoters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "voteToDraft",
    outputs: [
      {
        internalType: "bool",
        name: "isDrafted",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_cid",
        type: "bytes",
      },
    ],
    name: "voteToPublish",
    outputs: [
      {
        internalType: "bool",
        name: "isPublished",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class StoryTest__factory {
  static readonly abi = _abi;
  static createInterface(): StoryTestInterface {
    return new utils.Interface(_abi) as StoryTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoryTest {
    return new Contract(address, _abi, signerOrProvider) as StoryTest;
  }
}
